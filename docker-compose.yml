version: '3'
services:
  
  #PHP
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: thomz/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      # host:container
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - db
    entrypoint: sh -c php-fpm && php artisan key:generate && php artisan migrate && php artisan config:clear
    # command: "sh -c php-fpm && php artisan key:generate && php artisan migrate && php artisan config:clear"
    
  # NPM
  npm:  
    image: node:latest
    container_name: npm
    restart: no
    tty: true
    working_dir: /var/www
    command: sh -c "npm install && npm run build"
    volumes: 
      - "./:/var/www"
    networks:
      - app-network
    depends_on:
      - app # depends of php to build front-end

  #Nginx
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8989:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - app-network
    depends_on:
      - app

  #MySQL
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

#Networks
networks:
  app-network:
    driver: bridge
    
#Volumes
volumes:
  dbdata:
    driver: local